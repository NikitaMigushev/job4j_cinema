@startuml cinema
package "model" #DDDDDD {
    Class File {
        private int id;
        private String name;
        private String path;
    }

    Class Genre {
        private int id;
        private String name;
        }

    Class Film {
        private int id;
        private String name;
        private String description;
        private int year;
        private int genreId;
        private int minimalAge;
        private int durationInMinutes;
        private int fileId;
         }

    Class Hall {
        private int id;
        private String name;
        private int rowCount;
        private int placeCount;
        private String description;
          }

    Class Session {
        private int id;
        private int filmId;
        private int hallsId;
        private LocalDateTime startTime;
        private LocalDateTime endTime;
        private int price;
        }

    Class User {
        private int id;
        private String fullName;
        private String email;
        private String password
        private LocalDateTime creationDateTime;
    }

    Class Ticket {
        private int id;
        private int sessionId;
        private int rowNumber;
        private int placeNumber;
        private int userId;
        private LocalDateTime creationDateTime;
    }
}

package "dto" #DDDDDD {
    Class FilmDto {
        private int id;
        private String name;
        private String description;
        private int year;
        private int minimalAge;
        private int durationInMinutes;
        private String genre;
    }

    Class SessionDto {
           private int id;
           private String filmName;
           private int filmId;
           private String hallsName;
           private LocalDateTime startTime;
           private LocalDateTime endTime;
           private int price;
    }
}

package "repository" #DDDDDD {
    Interface UserRepository {
         Optional<User> save(User user);
         Optional<User> findById(int id);
         Optional<User> findByEmailAndPassword(String email, String password);
    }
    Interface FilmRepository {
        Optional<FilmDto> findById(int id);
        Collection<FilmDto> findAll();
    }
    Interface TicketRepository {
        Ticket save(Ticket ticket);
        Optional<Ticket> findById(int id);
    }
    Interface SessionRepository {
        Optional<SessionDto> findById(int id);
        Collection<SessionDto> findAll();
    }

    Class Sql2oUserRepository implements UserRepository {
             Optional<User> save(User user);
             Optional<User> findById(int id);
             Collection<User> findAll();
             Optional<User> findByEmailAndPassword(String email, String password);
    }

    Class Sql2oFilmRepository implements FilmRepository {
         Optional<FilmDto> findById(int id);
         Collection<FilmDto> findAll();
    }

     Class Sql2oTicketRepository implements TicketRepository {
            Ticket save(Ticket ticket);
            Optional<Ticket> findById(int id);
        }
        Class Sql2oSessionRepository implements SessionRepository {
            Optional<Session> findById(int id);
            Collection<Session> findAll();
        }
}

package "service" #DDDDDD {
        Interface UserService {
                 Optional<User> save(User user);
                 Optional<User> findById(int id);
                 Optional<User> findByEmailAndPassword(String email, String password);
        }
        Interface FilmService {
            Optional<FilmDto> findById(int id);
            Collection<FilmDto> findAll();
        }
        Interface TicketService {
            Ticket save(Ticket ticket);
            Optional<Ticket> findById(int id);

        }
        Interface SessionService {
             Optional<SessionDto> findById(int id);
             Collection<SessionDto> findAll();
        }

        Class SimpleUserService implements UserService {
                         Optional<User> save(User user);
                         Optional<User> findById(int id);
                         Optional<User> findByEmailAndPassword(String email, String password);
                }
        Class SimpleFilmService implements FilmService {
                    Optional<FilmDto> findById(int id);
                    Collection<FilmDto> findAll();
                }
        Class SimpleTicketService implements TicketService {
                    Ticket save(Ticket ticket);
                    Optional<Ticket> findById(int id);

                }
        Class SimpleSessionService implements SessionService {
                     Optional<Session> findById(int id);
                     Collection<Session> findAll();
                }
}


package "filter" #DDDDDD {
    Class AuthorizationFilter {
    }

    Class SessionFilter {
    }
}


package "controller" #DDDDDD {
    Class IndexController {
          @GetMapping({"/", "/index"}) public String getAll(Model model)
    }

    Class FilmController {
        @GetMapping public String getAll(Model model)
    }

    Class UserController {
        @GetMapping("/login") public String getLoginPage()
        @PostMapping("/login") public String loginUser(@ModelAttribute User user, Model model, HttpServletRequest request)
        @GetMapping("/logout") public String logout(HttpSession session)
        @GetMapping("/register") public ModelAndView getRegistrationPage()
        @PostMapping("/register") public String register(Model model, @ModelAttribute User user)
    }

    Class SessionController {
        @GetMapping public String getAll(Model model)
        @GetMapping("/{id}")  public String getById(Model model, @PathVariable int id)

    }

    Class TicketController {
    @GetMapping("/create") public String getCreationPage(Model model)
    @PostMapping("/create") public String create(@ModelAttribute Ticket ticket, Model model)
    }
}


package "templates" {
    package "navigation" {
        Class Navigation {
        }

        Class Footer {
        }
    }

    package "users" {
        Class Registration {
        }

        Class Login {
        }
    }

    package "films" {
        Class ListFilms {
        }
    }

    package "sessions" {
        Class ListSessions {
        }
    }

    package "tickets" {
        Class OneTicket {
        }

        Class Success {
        }

        Class Fails {
        }
    }

    package "errors" {
        Class 404 {
        }
    }
}

package "configuration" {
}
@enduml